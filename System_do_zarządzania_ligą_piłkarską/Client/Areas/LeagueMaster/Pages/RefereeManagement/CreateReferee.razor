@using System_do_zarządzania_ligą_piłkarską.Shared.DTOs
@using System_do_zarządzania_ligą_piłkarską.Client.Areas.LeagueMaster.Shared
@using System_do_zarządzania_ligą_piłkarską.Shared.DTOs.Matches
@using System_do_zarządzania_ligą_piłkarską.Shared.DTOs.Referees
@using System_do_zarządzania_ligą_piłkarską.Client.Extensions
@using System_do_zarządzania_ligą_piłkarską.Client.Components
@using Microsoft.AspNetCore.Authorization

@page "/league-master/add-new-referee"
@layout LeagueMasterLayout
@inject HttpClient Http
@inject NavigationManager Navigation
@inject AlertManager AlertManager
@attribute [Authorize(Roles = "LeagueMaster")]

<PageTitle>Dodawanie sędziego</PageTitle>

<div class="container py-5">
    <div class="row mb-4">
        <div class="col text-center">
            <h3 class="fw-bold text-primary">Dodaj sędziego</h3>
        </div>
    </div>

    @if (newReferee != null)
    {
        <EditForm Model="newReferee" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="firstName" class="form-label">Imię</label>
                <InputText id="firstName" class="form-control" @bind-Value="newReferee.FirstName" />
                <ValidationMessage For="@(() => newReferee.FirstName)" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="lastName" class="form-label">Nazwisko</label>
                <InputText id="lastName" class="form-control" @bind-Value="newReferee.LastName" />
                <ValidationMessage For="@(() => newReferee.LastName)" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="nationality" class="form-label">Narodowość</label>
                <InputText id="nationality" class="form-control" @bind-Value="newReferee.Nationality" />
                <ValidationMessage For="@(() => newReferee.Nationality)" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="level" class="form-label">Poziom</label>
                <InputText id="level" class="form-control" @bind-Value="newReferee.Level" />
                <ValidationMessage For="@(() => newReferee.Level)" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="birthday" class="form-label">Data urodzenia</label>
                <InputDate id="birthday" class="form-control" @bind-Value="newReferee.DateOfBirth" />
                <ValidationMessage For="@(() => newReferee.DateOfBirth)" class="text-danger" />
            </div>

            <div class="text-center">
                <button type="submit" class="btn btn-primary">Dodaj nowego sędziego</button>
            </div>
        </EditForm>
    }
    else
    {
        <div class="text-center">
            <span class="spinner-border text-primary" role="status"></span>
            <span class="visually-hidden">Ładowanie...</span>
        </div>
    }
</div>


<Alert Message="@AlertManager.Message" Type="@AlertManager.Type" IsVisible="@AlertManager.IsVisible" />


@code {
    private NewRefereeDTO newReferee;

    protected override async Task OnInitializedAsync()
    {
        newReferee = new NewRefereeDTO();
        newReferee.DateOfBirth = new DateOnly(1990, 1, 1);
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/referees/league-master/add-new-referee", newReferee);

            if (response.IsSuccessStatusCode)
            {
                AlertManager.DisplayAlert($"Dodano sędziego {RefereeInfo()} do wybranego sezonu!", "success");
                Clear();
            }
            else
            {
                AlertManager.DisplayAlert($"Nie udało się dodać sędziego {RefereeInfo()} do wybranego sezonu.", "danger");
            }
        }
        catch (Exception ex)
        {
            AlertManager.DisplayAlert($"Nie udało się dodać sędziego {RefereeInfo()} do wybranego sezonu.", "danger");
        }
    }

    private string RefereeInfo()
    {
        return $"{newReferee.FirstName} {newReferee.LastName}";
    }

    private void Clear()
    {
        newReferee.FirstName = string.Empty;
        newReferee.LastName = string.Empty;
        newReferee.Level = string.Empty;
        newReferee.DateOfBirth = new DateOnly(1990, 1, 1);
        newReferee.Nationality = string.Empty;
    }

    private void BackToStart()
    {
        Navigation.NavigateTo($"/league-master");
    }
}