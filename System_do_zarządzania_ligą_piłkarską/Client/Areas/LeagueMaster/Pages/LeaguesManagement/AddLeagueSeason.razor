@using System_do_zarządzania_ligą_piłkarską.Shared.DTOs
@using System_do_zarządzania_ligą_piłkarską.Client.Areas.LeagueMaster.Shared
@using System_do_zarządzania_ligą_piłkarską.Client.Extensions
@using System_do_zarządzania_ligą_piłkarską.Client.Components
@using System_do_zarządzania_ligą_piłkarską.Shared.DTOs.Leagues
@using Microsoft.AspNetCore.Authorization
@using System_do_zarządzania_ligą_piłkarską.Shared.Enums

@page "/league-master/leagues/{leagueInfoId:int}/add-new-season"
@layout LeagueMasterLayout
@inject HttpClient Http
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject AlertManager AlertManager
@attribute [Authorize(Roles = "LeagueMaster")]

<PageTitle>Dodaj nowy sezon</PageTitle>

<div class="container py-5">
    <div class="row mb-4">
        <div class="col text-center">
            <h3 class="display-5 fw-bold text-primary">Dodaj nowy sezon</h3>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col text-start">
            <button class="btn btn-secondary" @onclick="GoBackToTheSeasons">
                <i class="fas fa-arrow-left"></i> Wróć
            </button>
        </div>
    </div>

    @if (newLeagueSeason != null)
    {
        <div class="row justify-content-center">
            <div class="col-md-6">
                <EditForm Model="newLeagueSeason" OnValidSubmit="AddNewSeason" class="p-4 border rounded shadow-sm">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label for="season" class="form-label">Sezon</label>
                        <select id="season" class="form-select" @bind="newLeagueSeason.Season">
                            @foreach (var season in Enum.GetValues(typeof(Season)).Cast<Season>())
                            {
                                <option value="@season">@(season.ToString().Substring(1))</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="startDate" class="form-label">Data rozpoczęcia sezonu (opcjonalnie)</label>
                        <InputDate id="startDate" class="form-control" @bind-Value="newLeagueSeason.LeagueStartDate" />
                    </div>

                    <div class="mb-3">
                        <label for="endDate" class="form-label">Data zakończenia sezonu (opcjonalnie)</label>
                        <InputDate id="endDate" class="form-control" @bind-Value="newLeagueSeason.LeagueEndDate" />
                    </div>

                    <div class="text-center">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-plus-circle"></i> Dodaj sezon
                        </button>
                    </div>
                </EditForm>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col text-center">
                <span class="spinner-border text-primary" role="status"></span>
                <span class="visually-hidden">Ładowanie...</span>
            </div>
        </div>
    }

    <div class="row mt-4">
        <div class="col">
            <Alert Message="@AlertManager.Message" Type="@AlertManager.Type" IsVisible="@AlertManager.IsVisible" />
        </div>
    </div>
</div>



@code {
    [Parameter] public int leagueInfoId { get; set; }
    private NewLeagueSeasonDTO newLeagueSeason;

    protected override async Task OnInitializedAsync()
    {
        newLeagueSeason = new NewLeagueSeasonDTO();
    }

    private void GoBackToTheSeasons()
    {
        Navigation.NavigateTo($"/league-master/leagues/{leagueInfoId}");
    }

    private async Task AddNewSeason()
    {
        newLeagueSeason.LeagueInfoId = leagueInfoId;
        var response = await Http.PostAsJsonAsync($"api/leagues/league-master/{leagueInfoId}/add-new-season", newLeagueSeason);

        if (response.IsSuccessStatusCode)
        {
            AlertManager.DisplayAlert($"Dodano nowy sezon!", "success");
            newLeagueSeason = new NewLeagueSeasonDTO();
        }
        else
        {
            AlertManager.DisplayAlert($"Nie udało się dodać nowego sezonu.", "danger");
        }
    }
}