@using System_do_zarządzania_ligą_piłkarską.Shared.DTOs
@using System_do_zarządzania_ligą_piłkarską.Client.Areas.LeagueMaster.Shared

@page "/league-master/leagues/{leagueInfoId:int}"
@layout LeagueMasterLayout
@inject HttpClient Http
@inject NavigationManager Navigation

<PageTitle>Sezony</PageTitle>

<div class="button-container">
    <button class="btn btn-secondary" @onclick="GoBackToTheLeagues">Wróć</button>
</div>


<h3>Sezony ligi @leagueName:</h3>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Sezon</th>
            <th>Rozpoczęcie sezonu</th>
            <th>Zakończenie sezonu</th>
            <th>Rozegrane mecze</th>
            <th>Zarządzaj</th>
        </tr>
    </thead>
    <tbody>
        @if (seasons == null)
        {
            <tr>
                <td colspan="8">Ładowanie...</td>
            </tr>
        }
        else if (seasons.Count == 0)
        {
            <tr>
                <td colspan="8">Brak danych do wyświetlenia</td>
            </tr>
        }
        else
        {
            @foreach (var season in seasons)
            {
                <tr>
                    <td>@season.Season</td>
                    <td>@season.LeagueStartDate</td>
                    <td>@season.LeagueEndDate</td>
                    <td>@season.MatchesPlayed</td>

                    <td>
                        <button class="btn btn-link" @onclick="() => GoToTheSeason(season.Id)">
                            <i class="fas fa-arrow-right"></i> Przejdź do sezonu
                        </button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    [Parameter] public int leagueInfoId { get; set; }
    public string? leagueName { get; set; }

    private List<LeagueSeasonDTO>? seasons;

    protected override async Task OnInitializedAsync()
    {
        seasons = await Http.GetFromJsonAsync<List<LeagueSeasonDTO>>($"api/leagues/league-master/{leagueInfoId}");
        AssignLeagueName();
    }

    private void AssignLeagueName()
    {
        var league = seasons?.FirstOrDefault();
        leagueName = league?.LeagueInfo.Name;
    }

    private void GoToTheSeason(int leagueSeasonId)
    {
        Navigation.NavigateTo($"/league-master/leagues/{leagueInfoId}/{leagueSeasonId}");
    }

    private void GoBackToTheLeagues()
    {
        Navigation.NavigateTo($"/league-master/leagues");
    }
}