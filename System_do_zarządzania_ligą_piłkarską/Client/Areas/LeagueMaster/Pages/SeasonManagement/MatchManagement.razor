@using System_do_zarządzania_ligą_piłkarską.Shared.DTOs
@using System_do_zarządzania_ligą_piłkarską.Client.Areas.LeagueMaster.Shared
@using System_do_zarządzania_ligą_piłkarską.Client.Components
@using System_do_zarządzania_ligą_piłkarską.Shared.DTOs.Matches
@using Microsoft.AspNetCore.Authorization

@page "/league-master/leagues/{leagueInfoId:int}/{leagueSeasonId:int}/manage-matches"
@layout LeagueMasterLayout
@inject HttpClient Http
@inject NavigationManager Navigation
@attribute [Authorize(Roles = "LeagueMaster")]

<PageTitle>Zarządzanie meczami</PageTitle>

<div class="button-container">
    <button class="btn btn-secondary" @onclick="BackToTheSeasonManagement">Wróć</button>
</div>

@if (matches != null)
{
    <h3>Mecze:</h3>
    <MatchesTableForLeagueMaster Matches="matches"
                                 LeagueInfoId="leagueInfoId"
                                 LeagueSeasonId="leagueSeasonId">
    </MatchesTableForLeagueMaster>
}
else
{
    <p>Ładowanie...</p>
}

@code {
    [Parameter] public int leagueInfoId { get; set; }
    [Parameter] public int leagueSeasonId { get; set; }

    private List<ShortMatchInfoDTO>? matches;

    protected override async Task OnInitializedAsync()
    {
        matches = await Http.GetFromJsonAsync<List<ShortMatchInfoDTO>>($"api/matches/league-master/{leagueSeasonId}");
    }

    private void BackToTheSeasonManagement()
    {
        Navigation.NavigateTo($"/league-master/leagues/{leagueInfoId}/{leagueSeasonId}");
    }
}
