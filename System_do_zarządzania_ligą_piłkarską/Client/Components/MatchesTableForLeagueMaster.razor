@using System_do_zarządzania_ligą_piłkarską.Shared.DTOs.Matches
@inject NavigationManager Navigation

<table class="table table-hover table-bordered shadow-sm mt-4">
    <thead class="table-primary">
        <tr class="text-center">
            <th>#</th>
            <th>Kolejka</th>
            <th>Data</th>
            <th>Godzina</th>
            <th>Gospodarz</th>
            <th>Gość</th>
            <th>Wynik</th>
            <th>Rezultat</th>
            <th>Działania</th>
        </tr>
    </thead>
    <tbody>
        @if (Matches == null)
        {
            <tr>
                <td colspan="9" class="text-center">
                    <span class="spinner-border text-primary" role="status"></span>
                    <span class="visually-hidden">Ładowanie...</span>
                </td>
            </tr>
        }
        else if (Matches.Count == 0)
        {
            <tr>
                <td colspan="9" class="text-center">Brak danych do wyświetlenia</td>
            </tr>
        }
        else
        {
            int index = 1;
            foreach (var match in Matches)
            {
                <tr class="text-center align-middle">
                    <td>@index</td>
                    <td>@match.Round</td>
                    <td>@match.MatchDate</td>
                    <td>@match.MatchTime</td>
                    <td>@match.HomeTeam.Name</td>
                    <td>@match.AwayTeam.Name</td>
                    <td>@ShowScore(match)</td>
                    <td>@ShowResult(match.Id)</td>
                    <td>
                        <button class="btn btn-primary btn-sm" @onclick="() => GoToManagement(match.Id)">
                            <i class="fas fa-edit me-1"></i> Zarządzaj
                        </button>
                    </td>
                </tr>
                index++;
            }
        }
    </tbody>
</table>

@code {
    [Parameter] public List<ShortMatchInfoDTO> Matches { get; set; }

    [Parameter] public int LeagueInfoId { get; set; }
    [Parameter] public int LeagueSeasonId { get; set; }

    public string ShowResult(int matchId)
    {
        var match = Matches.FirstOrDefault(m => m.Id == matchId);

        if (match == null || match.GoalsHome == null || match.GoalsAway == null || !match.IsFinished)
        {
            return "Niezakończony";
        }
        if (match.GoalsHome == match.GoalsAway)
        {
            return "Remis";
        }
        if (match.GoalsHome > match.GoalsAway)
        {
            return match.HomeTeam.Name;
        }
        return match.AwayTeam.Name;
    }

    public string ShowScore(ShortMatchInfoDTO match)
    {
        return $"{match.HomeTeam.Name}  {match.GoalsHome}:{match.GoalsAway}  {match.AwayTeam.Name}";
    }

    public void GoToManagement(int matchId)
    {
        Navigation.NavigateTo($"/league-master/leagues/{LeagueInfoId}/{LeagueSeasonId}/manage-matches/{matchId}");
    }
}


