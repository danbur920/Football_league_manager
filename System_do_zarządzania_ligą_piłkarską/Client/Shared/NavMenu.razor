@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System_do_zarządzania_ligą_piłkarską.Shared.DTOs

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient Http

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">System_do_zarządzania_ligą_piłkarską</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <i class="fas fa-home px-2"></i> Start
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="leagues">
                <i class="fas fa-trophy px-2"></i> Ligi
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="teams">
                <i class="fas fa-users px-2"></i> Drużyny
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="footballers">
                <i class="fas fa-user px-2"></i> Piłkarze
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="referees">
                <i class="fas fa-flag px-2"></i> Sędziowie
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="trophies">
                <i class="fas fa-award px-2"></i> Trofea
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="create-league">
                <i class="fas fa-plus px-2"></i> Stwórz ligę
            </NavLink>
        </div>
        <div class="nav-info px-3">
            <span class="px-2">Sekcja faworytów</span>
        </div>
        @if (userId != null)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="favourites/leagues">
                    <i class="fas fa-star px-2"></i> Ulubione ligi
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="favourites/teams">
                    <i class="fas fa-star px-2"></i> Ulubione drużyny
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="favourites/footballers">
                    <i class="fas fa-star px-2"></i> Ulubieni piłkarze
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="favourites/referees">
                    <i class="fas fa-star px-2"></i> Ulubieni sędziowie
                </NavLink>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Identity/Account/Login">
                    <i class="fas fa-lock px-2"></i> Dla zalogowanych
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private string userId;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        AuthenticationStateProvider.AuthenticationStateChanged += OnAuthenticationStateChanged;

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        userId = user.FindFirst(c => c.Type == "sub")?.Value;
        StateHasChanged();
    }

    private async void OnAuthenticationStateChanged(Task<AuthenticationState> task)
    {
        var authState = await task;
        var user = authState.User;
        userId = user.FindFirst(c => c.Type == "sub")?.Value;
        StateHasChanged();
    }

    public void Dispose()
    {
        AuthenticationStateProvider.AuthenticationStateChanged -= OnAuthenticationStateChanged;
    }
}

<style>
    .navbar-toggler {
        background-color: rgba(255, 255, 255, 0.1);
    }

    .top-row {
        height: 3.5rem;
        background-color: rgba(0, 0, 0, 0.4);
    }

    .navbar-brand {
        font-size: 1.1rem;
    }

    .oi {
        width: 2rem;
        font-size: 1.1rem;
        vertical-align: text-top;
        top: -2px;
    }

    .nav-info {
        font-size: 1rem;
        color: #ffffff;
        padding: 0.75rem 0;
        background-color: rgba(0, 0, 0, 0.6);
        border-top: 1px solid rgba(255, 255, 255, 0.3);
        border-bottom: 1px solid rgba(255, 255, 255, 0.3);
        margin-top: 1rem;
        margin-bottom: 0.5rem;
        letter-spacing: 0.05rem;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
    }

    .nav-item {
        font-size: 0.9rem;
        padding-bottom: 0.5rem;
    }

        .nav-item:first-of-type {
            padding-top: 1rem;
        }

        .nav-item:last-of-type {
            padding-bottom: 1rem;
        }

        .nav-item ::deep a, .nav-info ::deep span {
            color: #d7d7d7;
            border-radius: 4px;
            height: 3rem;
            display: flex;
            align-items: center;
            line-height: 3rem;
            padding: 0 0.75rem;
        }

            .nav-item ::deep a.active {
                background-color: rgba(255, 255, 255, 0.25);
                color: white;
            }

            .nav-item ::deep a:hover, .nav-info ::deep span:hover {
                background-color: rgba(255, 255, 255, 0.1);
                color: white;
            }

    media (min-width: 641px) {
        .navbar-toggler

    {
        display: none;
    }

    .collapse {
        display: block;
    }

    .nav-scrollable {
        height: calc(100vh - 3.5rem);
        overflow-y: auto;
    }

    }
</style>