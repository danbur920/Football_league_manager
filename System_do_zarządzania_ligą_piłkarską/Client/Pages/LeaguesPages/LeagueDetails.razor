@page "/leagues/{leagueSeasonId:int}"

@using System.Net.Http
@using System_do_zarządzania_ligą_piłkarską.Shared.DTOs
@using System_do_zarządzania_ligą_piłkarską.Client.Extensions
@using System_do_zarządzania_ligą_piłkarską.Shared.DTOs.Leagues

@inject PublicClient PublicClient
@inject NavigationManager Navigation

<PageTitle>Szczegóły Ligi</PageTitle>

<div class="container py-5">
    <div class="text-center mb-5">
        <h1 class="display-4 fw-bold text-primary">Szczegóły Ligi</h1>
    </div>

    <div class="text-center mb-4">
        <button class="btn btn-primary btn-lg me-2 shadow-sm" @onclick="ShowTable">
            <i class="fas fa-table me-2"></i> Tabela
        </button>
        <button class="btn btn-primary btn-lg me-2 shadow-sm" @onclick="ShowScorers">
            <i class="fas fa-trophy me-2"></i> Strzelcy
        </button>
        <button class="btn btn-secondary btn-lg shadow-sm" @onclick="GoBack">
            <i class="fas fa-arrow-left me-2"></i> Wróć
        </button>
    </div>

    @if (league != null)
    {
        <div class="row g-4">
            <!-- Sekcja herbu -->
            <div class="col-lg-4">
                <div class="card border-0 shadow-sm">
                    <div class="card-body text-center">
                        <h5 class="card-title text-secondary fw-bold mb-4">Herb Ligi</h5>
                        @if (!string.IsNullOrEmpty(league.Image?.Path))
                        {
                            <img src="@league.Image.Path" alt="Herb Ligi" class="img-fluid rounded shadow-sm mb-3" style="max-height: 300px; object-fit: cover;">
                        }
                        else
                        {
                            <div class="alert alert-warning" role="alert">
                                Brak herbu dla tej ligi.
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="col-lg-8">
                <div class="card border-0 shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title text-secondary fw-bold mb-4">@league.Name</h5>
                        <ul class="list-unstyled mb-4">
                            <li><strong>Sezon:</strong> @league.Season</li>
                            <li><strong>Poziom:</strong> @league.Level</li>
                            <li><strong>Rozegrane mecze:</strong> @league.MatchesPlayed</li>
                            <li><strong>Start:</strong> @league.LeagueStartDate?.ToString("dd MMM yyyy")</li>
                            <li><strong>Koniec:</strong> @league.LeagueEndDate?.ToString("dd MMM yyyy")</li>
                        </ul>

                        <div class="alert alert-info text-center shadow-sm">
                            <p class="mb-1"><strong>Lider:</strong> N/D</p>
                            <p><strong>Król strzelców:</strong> N/D</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="d-flex justify-content-center align-items-center" style="min-height: 200px;">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Ładowanie...</span>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public int leagueSeasonId { get; set; }
    private LeagueSeasonProfilDTO? league;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            league = await PublicClient.Client.GetFromJsonAsync<LeagueSeasonProfilDTO>($"api/leagues/{leagueSeasonId}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Błąd podczas ładowania danych: {ex.Message}");
        }
    }

    private void ShowTable()
    {
        Navigation.NavigateTo($"/leagues/{leagueSeasonId}/table");
    }

    private void ShowScorers()
    {
        Navigation.NavigateTo($"/leagues/{leagueSeasonId}/scorers");
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/leagues");
    }
}
