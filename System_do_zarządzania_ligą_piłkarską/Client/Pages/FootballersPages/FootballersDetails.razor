@page "/footballers/{footballerId:int}"

@using System_do_zarządzania_ligą_piłkarską.Shared.DTOs
@using System.Net.Http
@using System.Threading.Tasks
@using Microsoft.AspNetCore.Components
@using System_do_zarządzania_ligą_piłkarską.Client.Extensions
@using System_do_zarządzania_ligą_piłkarską.Shared.DTOs.Footballers

@inject PublicClient PublicClient
@inject NavigationManager Navigation

<PageTitle>Szczegóły piłkarza</PageTitle>

<div class="container py-5">
    <div class="text-center mb-4">
        <h1 class="display-4 fw-bold text-primary">Szczegóły Piłkarza</h1>
    </div>

    <div class="text-center mb-4">
        <button class="btn btn-primary btn-lg" @onclick="GoToFootballers">Wróć do listy</button>
    </div>

    @if (footballer == null || footballerStats == null)
    {
        <div class="d-flex justify-content-center align-items-center" style="min-height: 200px;">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Ładowanie...</span>
            </div>
        </div>
    }
    else
    {
        <div class="row g-4">
            <div class="col-lg-4">
                <div class="card border-0 shadow-sm">
                    <div class="card-body text-center">
                        <h5 class="card-title text-secondary fw-bold mb-4">Zdjęcie Piłkarza</h5>
                        @if (footballer.Image != null)
                        {
                            <img src="@footballer.Image.Path" alt="Zdjęcie piłkarza" class="img-fluid rounded shadow-sm mb-3" style="max-height: 300px; object-fit: cover;">
                        }
                        else
                        {
                            <div class="alert alert-warning" role="alert">
                                Brak zdjęcia dla tego piłkarza.
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="card border-0 shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title text-secondary fw-bold mb-4">Dane osobowe</h5>
                        <p><strong>Imię i nazwisko:</strong> @footballer.FirstName @footballer.LastName</p>
                        @if (!string.IsNullOrEmpty(footballer.NickName))
                        {
                            <p><strong>Pseudonim:</strong> @footballer.NickName</p>
                        }
                        <p><strong>Numer na koszulce:</strong> @footballer.ShirtNumber</p>
                        <p><strong>Data urodzenia:</strong> @footballer.DateOfBirth.ToString("dd MMMM yyyy")</p>
                        <p><strong>Narodowość:</strong> @footballer.Nationality</p>
                        <p><strong>Pozycja:</strong> @footballer.Position</p>
                        @if (footballer.Height.HasValue)
                        {
                            <p><strong>Wzrost:</strong> @footballer.Height.Value cm</p>
                        }
                        @if (footballer.Weight.HasValue)
                        {
                            <p><strong>Waga:</strong> @footballer.Weight.Value kg</p>
                        }
                        @if (footballer.TeamName != null)
                        {
                            <p><strong>Klub:</strong> @footballer.TeamName</p>
                        }
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="card border-0 shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title text-secondary fw-bold mb-4">Statystyki sezonu</h5>

                        <div class="mb-3">
                            <label for="seasonSelector" class="form-label"><strong>Wybierz sezon:</strong></label>
                            <select id="seasonSelector" class="form-select" @onchange="OnSeasonChanged">
                                @foreach (var stat in footballerStats)
                                {
                                    <option value="@stat.LeagueSeason.Id" selected="@(currentFootballerStat?.LeagueSeason?.Id == stat.LeagueSeason?.Id)">
                                        @stat.LeagueSeason?.Name @stat.LeagueSeason?.Season.ToString().Substring(1)
                                    </option>
                                }
                            </select>
                        </div>

                        <p><strong>Gole:</strong> @currentFootballerStat.Goals</p>
                        <p><strong>Gole samobójcze:</strong> @currentFootballerStat.OwnGoals</p>
                        <p><strong>Asysty:</strong> @currentFootballerStat.Assists</p>
                        <p><strong>Żółte kartki:</strong> @currentFootballerStat.YellowCards</p>
                        <p><strong>Czerwone kartki:</strong> @currentFootballerStat.RedCards</p>
                        <p><strong>Rozegrane mecze:</strong> @currentFootballerStat.MatchesPlayed</p>
                        <p><strong>Wyjściowa 11:</strong> @currentFootballerStat.StartingAppearances</p>
                        <p><strong>Wejście z ławki:</strong> @currentFootballerStat.SubstituteAppearances</p>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public int footballerId { get; set; }

    private FootballerProfileDTO? footballer;
    private List<FootballerStatProfileDTO>? footballerStats;
    private FootballerStatProfileDTO? currentFootballerStat;

    protected override async Task OnInitializedAsync()
    {
        footballer = await PublicClient.Client.GetFromJsonAsync<FootballerProfileDTO>($"api/footballers/{footballerId}");
        footballerStats = await PublicClient.Client.GetFromJsonAsync<List<FootballerStatProfileDTO>>($"api/footballers/stats/{footballerId}");

        if (footballerStats != null)
            currentFootballerStat = footballerStats.FirstOrDefault();
    }

    private void GoToFootballers()
    {
        Navigation.NavigateTo("/footballers");
    }

    private void OnSeasonChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out int selectedId) && footballerStats != null)
        {
            currentFootballerStat = footballerStats.FirstOrDefault(stat => stat.LeagueSeason.Id == selectedId);
        }
    }
}
