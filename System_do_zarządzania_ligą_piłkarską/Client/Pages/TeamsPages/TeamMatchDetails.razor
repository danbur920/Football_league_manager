@page "/teams/{teamId:int}/past-matches/{matchId:int}"

@using System.Net.Http
@using System_do_zarządzania_ligą_piłkarską.Shared.DTOs
@using System_do_zarządzania_ligą_piłkarską.Client.Components
@using System_do_zarządzania_ligą_piłkarską.Client.Extensions
@using System_do_zarządzania_ligą_piłkarską.Shared.DTOs.Matches
@using System_do_zarządzania_ligą_piłkarską.Shared.Enums

@inject PublicClient PublicClient
@inject NavigationManager Navigation

<div class="container my-4">
    <div class="mb-3">
        <button class="btn btn-secondary" @onclick="GoBack">Wróć</button>
    </div>

    @if (match != null)
    {
        <div class="card shadow-sm mb-4">
            <div class="card-body">
                <h5 class="card-title">Aktualny wynik</h5>
                <p class="card-text text-muted">Mecz @(match.IsFinished ? "zakończony" : "niezakończony")</p>
                <div class="d-flex justify-content-between align-items-center">
                    <span class="fw-bold">@match.HomeTeam.Name</span>
                    <span class="fs-4">@($"{match.GoalsHome}:{match.GoalsAway}")</span>
                    <span class="fw-bold">@match.AwayTeam.Name</span>
                </div>
                <hr>
                <p class="text-muted text-center mt-2">
                    <i class="fas fa-user-tie me-2"></i>Sędzia: <strong>@match.Referee.FirstName @match.Referee.LastName</strong>
                </p>
                <div class="row text-center mt-3">
                    <div class="col-4">
                        <h6 class="text-primary">Gospodarz</h6>
                        <p class="mb-1"><i class="fas fa-exchange-alt me-2"></i>Zmiany: @match.HomeTeamSubstitutions</p>
                        <p class="mb-1"><i class="fas fa-exclamation-triangle text-warning me-2"></i>Żółte kartki: @match.HomeTeamYellowCards</p>
                        <p><i class="fas fa-ban text-danger me-2"></i>Czerwone kartki: @match.HomeTeamRedCards</p>
                    </div>
                    <div class="col-4">
                        <h6 class="text-secondary">Statystyki</h6>
                        <p class="text-muted mb-1">Porównanie drużyn</p>
                    </div>
                    <div class="col-4">
                        <h6 class="text-primary">Gość</h6>
                        <p class="mb-1"><i class="fas fa-exchange-alt me-2"></i>Zmiany: @match.AwayTeamSubstitutions</p>
                        <p class="mb-1"><i class="fas fa-exclamation-triangle text-warning me-2"></i>Żółte kartki: @match.AwayTeamYellowCards</p>
                        <p><i class="fas fa-ban text-danger me-2"></i>Czerwone kartki: @match.AwayTeamRedCards</p>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (match != null)
    {
        <div class="row gy-4">
            @if (homeLineup != null)
            {
                <div class="col-md-6">
                    <div class="card shadow-sm">
                        <div class="card-body">
                            <h5 class="card-title">Skład gospodarza</h5>
                            <MatchLineup players="homeLineup" LoadLineupsCallback="LoadLineups" LineupForLeagueMaster="false"></MatchLineup>
                        </div>
                    </div>
                </div>
            }

            @if (awayLineup != null)
            {
                <div class="col-md-6">
                    <div class="card shadow-sm">
                        <div class="card-body">
                            <h5 class="card-title">Skład gości</h5>
                            <MatchLineup players="awayLineup" LoadLineupsCallback="LoadLineups" LineupForLeagueMaster="false"></MatchLineup>
                        </div>
                    </div>
                </div>
            }

            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">Zdarzenia meczowe</h5>
                        @if (match.MatchEvents != null)
                        {
                            <div class="row">
                                <div class="col-md-6">
                                    <h6 class="text-primary">Gospodarz</h6>
                                    @foreach (var eventt in homeMatchEvents)
                                    {
                                        <div class="d-flex align-items-center mb-2">
                                            <span class="me-2">@eventt.Minute'</span>
                                            @switch (eventt.EventType)
                                            {
                                                case EventType.Goal:
                                                    <i class="fas fa-futbol text-success me-2"></i>
                                                    <span>@GetFootballersInfo(eventt.TeamId, eventt.PrimaryFootballerId, eventt.SecondaryFootballerId)</span>
                                                    break;
                                                case EventType.OwnGoal:
                                                    <i class="fas fa-futbol text-danger me-2"></i>
                                                    <span>@GetFootballersInfo(eventt.TeamId, eventt.PrimaryFootballerId, eventt.SecondaryFootballerId)</span>
                                                    break;
                                                case EventType.Penalty:
                                                    <i class="fas fa-futbol text-info me-2"></i>
                                                    <span>@GetFootballersInfo(eventt.TeamId, eventt.PrimaryFootballerId, eventt.SecondaryFootballerId)</span>
                                                    break;
                                                case EventType.MissedPenalty:
                                                    <i class="fas fa-futbol text-warning me-2"></i>
                                                    <span>@GetFootballersInfo(eventt.TeamId, eventt.PrimaryFootballerId, eventt.SecondaryFootballerId)</span>
                                                    break;
                                                case EventType.YellowCard:
                                                    <i class="fas fa-exclamation-triangle text-warning me-2"></i>
                                                    <span>@GetFootballersInfo(eventt.TeamId, eventt.PrimaryFootballerId, eventt.SecondaryFootballerId)</span>
                                                    break;
                                                case EventType.RedCard:
                                                    <i class="fas fa-ban text-danger me-2"></i>
                                                    <span>@GetFootballersInfo(eventt.TeamId, eventt.PrimaryFootballerId, eventt.SecondaryFootballerId)</span>
                                                    break;
                                                case EventType.Substitution:
                                                    <i class="fas fa-exchange-alt me-2"></i>
                                                    <span>@GetFootballersInfo(eventt.TeamId, eventt.PrimaryFootballerId, eventt.SecondaryFootballerId)</span>
                                                    break;
                                                default:
                                                    <span>@eventt.EventType</span>
                                                    <span>@GetFootballersInfo(eventt.TeamId, eventt.PrimaryFootballerId, eventt.SecondaryFootballerId)</span>
                                                    break;
                                            }
                                        </div>
                                    }
                                </div>

                                <div class="col-md-6">
                                    <h6 class="text-primary">Gość</h6>
                                    @foreach (var eventt in awayMatchEvents)
                                    {
                                        <div class="d-flex align-items-center mb-2">
                                            <span class="me-2">@eventt.Minute'</span>
                                            @switch (eventt.EventType)
                                            {
                                                case EventType.Goal:
                                                    <i class="fas fa-futbol text-success me-2"></i>
                                                    <span>@GetFootballersInfo(eventt.TeamId, eventt.PrimaryFootballerId, eventt.SecondaryFootballerId)</span>
                                                    break;
                                                case EventType.OwnGoal:
                                                    <i class="fas fa-futbol text-danger me-2"></i>
                                                    <span>@GetFootballersInfo(eventt.TeamId, eventt.PrimaryFootballerId, eventt.SecondaryFootballerId)</span>
                                                    break;
                                                case EventType.Penalty:
                                                    <i class="fas fa-futbol text-info me-2"></i>
                                                    <span>@GetFootballersInfo(eventt.TeamId, eventt.PrimaryFootballerId, eventt.SecondaryFootballerId)</span>
                                                    break;
                                                case EventType.MissedPenalty:
                                                    <i class="fas fa-futbol text-warning me-2"></i>
                                                    <span>@GetFootballersInfo(eventt.TeamId, eventt.PrimaryFootballerId, eventt.SecondaryFootballerId)</span>
                                                    break;
                                                case EventType.YellowCard:
                                                    <i class="fas fa-exclamation-triangle text-warning me-2"></i>
                                                    <span>@GetFootballersInfo(eventt.TeamId, eventt.PrimaryFootballerId, eventt.SecondaryFootballerId)</span>
                                                    break;
                                                case EventType.RedCard:
                                                    <i class="fas fa-ban text-danger me-2"></i>
                                                    <span>@GetFootballersInfo(eventt.TeamId, eventt.PrimaryFootballerId, eventt.SecondaryFootballerId)</span>
                                                    break;
                                                case EventType.Substitution:
                                                    <i class="fas fa-exchange-alt me-2"></i>
                                                    <span>@GetFootballersInfo(eventt.TeamId, eventt.PrimaryFootballerId, eventt.SecondaryFootballerId)</span>
                                                    break;
                                                default:
                                                    <span>@eventt.EventType</span>
                                                    <span>@GetFootballersInfo(eventt.TeamId, eventt.PrimaryFootballerId, eventt.SecondaryFootballerId)</span>
                                                    break;
                                            }
                                        </div>
                                    }
                                </div>
                            </div>

                            <div class="mt-4">
                                <h6>Legenda:</h6>
                                <ul class="list-unstyled">
                                    <li><i class="fas fa-futbol text-success me-2"></i> Gol</li>
                                    <li><i class="fas fa-futbol text-info me-2"></i> Gol (rzut karny)</li>
                                    <li><i class="fas fa-futbol text-warning me-2"></i> Rzut karny nietrafiony</li>
                                    <li><i class="fas fa-futbol text-danger me-2"></i> Gol samobójczy</li>
                                    <li><i class="fas fa-exclamation-triangle text-warning me-2"></i> Żółta kartka</li>
                                    <li><i class="fas fa-ban text-danger me-2"></i> Czerwona kartka</li>
                                    <li><i class="fas fa-exchange-alt me-2"></i> Zmiana</li>
                                </ul>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="text-center">
            <span class="text-muted">Ładowanie...</span>
        </div>
    }
</div>



@code {
    [Parameter] public int teamId { get; set; }
    [Parameter] public int matchId { get; set; }

    private TeamDTO? team;
    private MatchDetailsDTO? match;

    private List<ShortFootballerInfoDTO>? homeFootballers;
    private List<ShortFootballerInfoDTO>? awayFootballers;

    private List<MatchEventDTO>? homeMatchEvents;
    private List<MatchEventDTO>? awayMatchEvents;

    private List<MatchFootballerDTO>? homeLineup;
    private List<MatchFootballerDTO>? awayLineup;

    protected override async Task OnInitializedAsync()
    {
        match = await PublicClient.Client.GetFromJsonAsync<MatchDetailsDTO>($"api/matches/{matchId}");

        if (match != null)
        {
            homeFootballers = await PublicClient.Client.GetFromJsonAsync<List<ShortFootballerInfoDTO>>($"api/footballers/team/{match.HomeTeamId}");// potencjalnie do rozbudowy bo bierze wszystkich piłkarz z drużyny
            awayFootballers = await PublicClient.Client.GetFromJsonAsync<List<ShortFootballerInfoDTO>>($"api/footballers/team/{match.AwayTeamId}");

            await LoadMatchEvents();
        }
        await LoadLineups();
    }

    private async Task LoadLineups()
    {
        homeLineup = await PublicClient.Client.GetFromJsonAsync<List<MatchFootballerDTO>>($"api/matches/lineup/{matchId}/{match.HomeTeamId}");
        awayLineup = await PublicClient.Client.GetFromJsonAsync<List<MatchFootballerDTO>>($"api/matches/lineup/{matchId}/{match.AwayTeamId}");

        StateHasChanged();
    }

    private async Task LoadMatchEvents()
    {
        homeMatchEvents = match.MatchEvents.Where(x => x.TeamId == match.HomeTeamId).OrderBy(x => x.Minute).ToList();
        awayMatchEvents = match.MatchEvents.Where(x => x.TeamId == match.AwayTeamId).OrderBy(x => x.Minute).ToList();
    }

    private string GetFootballersInfo(int? teamId, int? primaryFootballerId, int? secondaryFootballerId)
    {
        if (teamId == homeFootballers.FirstOrDefault().TeamId)
        {
            var primaryFootballer = homeFootballers.FirstOrDefault(x => x.Id == primaryFootballerId);
            var secondaryFootballer = homeFootballers.FirstOrDefault(x => x.Id == secondaryFootballerId);
            if (secondaryFootballer != null)
            {
                return $"{primaryFootballer?.FirstName.FirstOrDefault()}. {primaryFootballer?.LastName} ({secondaryFootballer?.FirstName.FirstOrDefault()}. {secondaryFootballer?.LastName})";
            }

            return $"{primaryFootballer?.FirstName.FirstOrDefault()}. {primaryFootballer?.LastName}";
        }

        var primaryFootballerAway = awayFootballers.FirstOrDefault(x => x.Id == primaryFootballerId);
        var secondaryFootballerAway = awayFootballers.FirstOrDefault(x => x.Id == secondaryFootballerId);
        if (secondaryFootballerAway != null)
        {
            return $"{primaryFootballerAway?.FirstName.FirstOrDefault()}. {primaryFootballerAway?.LastName} ({secondaryFootballerAway?.FirstName.FirstOrDefault()}. {secondaryFootballerAway?.LastName})";
        }

        return $"{primaryFootballerAway?.FirstName.FirstOrDefault()}. {primaryFootballerAway?.LastName}";
    }

    private void GoBack()
    {
        Navigation.NavigateTo($"/teams/{teamId}/past-matches");
    }
}
