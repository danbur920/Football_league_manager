@page "/teams/{teamId:int}/lineup"

@using System.Net.Http
@using System_do_zarządzania_ligą_piłkarską.Shared.DTOs
@using System_do_zarządzania_ligą_piłkarską.Client.Components
@using System_do_zarządzania_ligą_piłkarską.Shared.Enums
@using System_do_zarządzania_ligą_piłkarską.Client.Extensions

@inject PublicClient PublicClient
@inject NavigationManager Navigation

<div class="container py-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3 class="display-5 text-primary">Kadra Zespołu</h3>
        <button class="btn btn-secondary" @onclick="GoBack">
            <i class="fas fa-arrow-left"></i> Wróć
        </button>
    </div>

    @if (teamLineup != null)
    {
        <div class="mb-4">
            <h5 class="fw-bold text-secondary">Bramkarze</h5>
            <Lineup players="goalkeepers"></Lineup>
        </div>

        <div class="mb-4">
            <h5 class="fw-bold text-secondary">Obrońcy</h5>
            <Lineup players="defenders"></Lineup>
        </div>

        <div class="mb-4">
            <h5 class="fw-bold text-secondary">Pomocnicy</h5>
            <Lineup players="midfielders"></Lineup>
        </div>

        <div class="mb-4">
            <h5 class="fw-bold text-secondary">Napastnicy</h5>
            <Lineup players="forwards"></Lineup>
        </div>
    }
    else
    {
        <div class="text-center">
            <p class="text-muted">Ładowanie...</p>
        </div>
    }
</div>


@code {
    [Parameter]
    public int teamId { get; set; }
    private List<FootballerStatDTO>? teamLineup;

    private List<FootballerStatDTO> goalkeepers;
    private List<FootballerStatDTO> defenders;
    private List<FootballerStatDTO> midfielders;
    private List<FootballerStatDTO> forwards;

    protected override async Task OnInitializedAsync()
    {
        teamLineup = await PublicClient.Client.GetFromJsonAsync<List<FootballerStatDTO>>($"api/teams/{teamId}/footballers/stats/current");
        SortPlayers();
    }
    private void GoBack()
    {
        Navigation.NavigateTo($"/teams/{teamId}");
    }

    private void SortPlayers()
    {
        foreach (var player in teamLineup)
        {
            var positionName = PositionHelper.GetDisplayName(player.Footballer.Position);
            Console.WriteLine($"Player Position: {positionName}"); 
        }

        goalkeepers = teamLineup.Where(x => PositionHelper.GetDisplayName(x.Footballer.Position) == "Bramkarz").ToList();
        defenders = teamLineup.Where(x => PositionHelper.GetDisplayName(x.Footballer.Position) == "Obrońca").ToList();
        midfielders = teamLineup.Where(x => PositionHelper.GetDisplayName(x.Footballer.Position) == "Pomocnik").ToList();
        forwards = teamLineup.Where(x => PositionHelper.GetDisplayName(x.Footballer.Position) == "Napastnik").ToList();
    }
}
