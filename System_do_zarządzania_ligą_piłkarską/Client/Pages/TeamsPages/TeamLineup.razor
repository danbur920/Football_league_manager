@page "/teams/{teamId:int}/lineup"

@using System.Net.Http
@using System_do_zarządzania_ligą_piłkarską.Shared.DTOs
@using System_do_zarządzania_ligą_piłkarską.Client.Components
@using System_do_zarządzania_ligą_piłkarską.Shared.Enums
@using System_do_zarządzania_ligą_piłkarską.Client.Extensions

@inject PublicClient PublicClient
@inject NavigationManager Navigation

<h3>Kadra zespołu</h3>

<div class="button-container">
    <button class="btn btn-secondary" @onclick="GoBack">Wróć</button>
</div>

@if (teamLineup != null)
{
    <p>Bramkarze:</p>
    <Lineup players="goalkeepers"></Lineup>

    <p>Obrońcy:</p>
    <Lineup players="defenders"></Lineup>

    <p>Pomocnicy:</p>
    <Lineup players="midfielders"></Lineup>

    <p>Napastnicy:</p>
    <Lineup players="forwards"></Lineup>
}
else
{
    <p>Ładowanie...</p>
}

@code {
    [Parameter]
    public int teamId { get; set; }
    private List<FootballerStatDTO>? teamLineup;

    private List<FootballerStatDTO> goalkeepers;
    private List<FootballerStatDTO> defenders;
    private List<FootballerStatDTO> midfielders;
    private List<FootballerStatDTO> forwards;

    protected override async Task OnInitializedAsync()
    {
        teamLineup = await PublicClient.Client.GetFromJsonAsync<List<FootballerStatDTO>>($"api/teams/{teamId}/footballers/stats/current");
        SortPlayers();
    }
    private void GoBack()
    {
        Navigation.NavigateTo($"/teams/{teamId}");
    }

    private void SortPlayers()
    {
        foreach (var player in teamLineup)
        {
            var positionName = PositionHelper.GetDisplayName(player.Footballer.Position);
            Console.WriteLine($"Player Position: {positionName}"); 
        }

        goalkeepers = teamLineup.Where(x => PositionHelper.GetDisplayName(x.Footballer.Position) == "Bramkarz").ToList();
        defenders = teamLineup.Where(x => PositionHelper.GetDisplayName(x.Footballer.Position) == "Obrońca").ToList();
        midfielders = teamLineup.Where(x => PositionHelper.GetDisplayName(x.Footballer.Position) == "Pomocnik").ToList();
        forwards = teamLineup.Where(x => PositionHelper.GetDisplayName(x.Footballer.Position) == "Napastnik").ToList();
    }
}
